
        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_LICENCIAS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_LICENCIAS_trg
    AFTER INSERT OR UPDATE OR DELETE ON LICENCIAS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('LICENCIAS', USER, 'INSERT', :NEW.LICENCIAID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.MOTIVO || ',' || :NEW.ESTADO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('LICENCIAS', USER, 'UPDATE', :NEW.LICENCIAID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.MOTIVO || ',' || :NEW.ESTADO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('LICENCIAS', USER, 'DELETE', :OLD.LICENCIAID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN || ',' || :OLD.MOTIVO || ',' || :OLD.ESTADO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_SANCIONES_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_SANCIONES_trg
    AFTER INSERT OR UPDATE OR DELETE ON SANCIONES
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SANCIONES', USER, 'INSERT', :NEW.SANCIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.TIPOSANCION || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SANCIONES', USER, 'UPDATE', :NEW.SANCIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.TIPOSANCION || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SANCIONES', USER, 'DELETE', :OLD.SANCIONID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHA || ',' || :OLD.TIPOSANCION || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_CONTRATO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_CONTRATO_trg
    AFTER INSERT OR UPDATE OR DELETE ON CONTRATO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTRATO', USER, 'INSERT', :NEW.CONTRATOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.TIPOCONTRATO || ',' || :NEW.TIPOCONTRATOID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTRATO', USER, 'UPDATE', :NEW.CONTRATOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.TIPOCONTRATO || ',' || :NEW.TIPOCONTRATOID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CONTRATO', USER, 'DELETE', :OLD.CONTRATOID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN || ',' || :OLD.TIPOCONTRATO || ',' || :OLD.TIPOCONTRATOID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_FORMACIONACADEMICA_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_FORMACIONACADEMICA_trg
    AFTER INSERT OR UPDATE OR DELETE ON FORMACIONACADEMICA
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('FORMACIONACADEMICA', USER, 'INSERT', :NEW.FORMACIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.NIVEL || ',' || :NEW.INSTITUCION || ',' || :NEW.ESPECIALIDAD);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('FORMACIONACADEMICA', USER, 'UPDATE', :NEW.FORMACIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.NIVEL || ',' || :NEW.INSTITUCION || ',' || :NEW.ESPECIALIDAD);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('FORMACIONACADEMICA', USER, 'DELETE', :OLD.FORMACIONID || ',' || :OLD.EMPLEADOID || ',' || :OLD.NIVEL || ',' || :OLD.INSTITUCION || ',' || :OLD.ESPECIALIDAD);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_SALARIO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_SALARIO_trg
    AFTER INSERT OR UPDATE OR DELETE ON SALARIO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SALARIO', USER, 'INSERT', :NEW.SALARIOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.MONTO || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.FECHAACTUALIZACION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SALARIO', USER, 'UPDATE', :NEW.SALARIOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.MONTO || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.FECHAACTUALIZACION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('SALARIO', USER, 'DELETE', :OLD.SALARIOID || ',' || :OLD.EMPLEADOID || ',' || :OLD.MONTO || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN || ',' || :OLD.FECHAACTUALIZACION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_CAPACITACION_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_CAPACITACION_trg
    AFTER INSERT OR UPDATE OR DELETE ON CAPACITACION
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CAPACITACION', USER, 'INSERT', :NEW.CAPACITACIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.NOMBRE || ',' || :NEW.INSTITUCION || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CAPACITACION', USER, 'UPDATE', :NEW.CAPACITACIONID || ',' || :NEW.EMPLEADOID || ',' || :NEW.NOMBRE || ',' || :NEW.INSTITUCION || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CAPACITACION', USER, 'DELETE', :OLD.CAPACITACIONID || ',' || :OLD.EMPLEADOID || ',' || :OLD.NOMBRE || ',' || :OLD.INSTITUCION || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_BENEFICIOS_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_BENEFICIOS_trg
    AFTER INSERT OR UPDATE OR DELETE ON BENEFICIOS
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('BENEFICIOS', USER, 'INSERT', :NEW.BENEFICIOID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('BENEFICIOS', USER, 'UPDATE', :NEW.BENEFICIOID || ',' || :NEW.NOMBRE || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('BENEFICIOS', USER, 'DELETE', :OLD.BENEFICIOID || ',' || :OLD.NOMBRE || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_AUDITORIA_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_AUDITORIA_trg
    AFTER INSERT OR UPDATE OR DELETE ON AUDITORIA
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AUDITORIA', USER, 'INSERT', :NEW.ID_AUDITORIA || ',' || :NEW.NOMBRE_TABLA || ',' || :NEW.FECHA_HORA || ',' || :NEW.USUARIO_DB || ',' || :NEW.ACCION || ',' || :NEW.DESCRIPCION_CAMBIOS);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AUDITORIA', USER, 'UPDATE', :NEW.ID_AUDITORIA || ',' || :NEW.NOMBRE_TABLA || ',' || :NEW.FECHA_HORA || ',' || :NEW.USUARIO_DB || ',' || :NEW.ACCION || ',' || :NEW.DESCRIPCION_CAMBIOS);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AUDITORIA', USER, 'DELETE', :OLD.ID_AUDITORIA || ',' || :OLD.NOMBRE_TABLA || ',' || :OLD.FECHA_HORA || ',' || :OLD.USUARIO_DB || ',' || :OLD.ACCION || ',' || :OLD.DESCRIPCION_CAMBIOS);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_EMPLEADO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_EMPLEADO_trg
    AFTER INSERT OR UPDATE OR DELETE ON EMPLEADO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EMPLEADO', USER, 'INSERT', :NEW.EMPLEADOID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.FECHANACIMIENTO || ',' || :NEW.EMAIL || ',' || :NEW.TELEFONO || ',' || :NEW.CARGOID || ',' || :NEW.UBICACIONID || ',' || :NEW.AREAID || ',' || :NEW.TIPODOCID);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EMPLEADO', USER, 'UPDATE', :NEW.EMPLEADOID || ',' || :NEW.NOMBRE || ',' || :NEW.APELLIDO || ',' || :NEW.FECHANACIMIENTO || ',' || :NEW.EMAIL || ',' || :NEW.TELEFONO || ',' || :NEW.CARGOID || ',' || :NEW.UBICACIONID || ',' || :NEW.AREAID || ',' || :NEW.TIPODOCID);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EMPLEADO', USER, 'DELETE', :OLD.EMPLEADOID || ',' || :OLD.NOMBRE || ',' || :OLD.APELLIDO || ',' || :OLD.FECHANACIMIENTO || ',' || :OLD.EMAIL || ',' || :OLD.TELEFONO || ',' || :OLD.CARGOID || ',' || :OLD.UBICACIONID || ',' || :OLD.AREAID || ',' || :OLD.TIPODOCID);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_CARGO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_CARGO_trg
    AFTER INSERT OR UPDATE OR DELETE ON CARGO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CARGO', USER, 'INSERT', :NEW.CARGOID || ',' || :NEW.NOMBRECARGO || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CARGO', USER, 'UPDATE', :NEW.CARGOID || ',' || :NEW.NOMBRECARGO || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('CARGO', USER, 'DELETE', :OLD.CARGOID || ',' || :OLD.NOMBRECARGO || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_DEPARTAMENTO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_DEPARTAMENTO_trg
    AFTER INSERT OR UPDATE OR DELETE ON DEPARTAMENTO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('DEPARTAMENTO', USER, 'INSERT', :NEW.DEPTOID || ',' || :NEW.NOMBREDEPTO || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('DEPARTAMENTO', USER, 'UPDATE', :NEW.DEPTOID || ',' || :NEW.NOMBREDEPTO || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('DEPARTAMENTO', USER, 'DELETE', :OLD.DEPTOID || ',' || :OLD.NOMBREDEPTO || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_JORNADALABORAL_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_JORNADALABORAL_trg
    AFTER INSERT OR UPDATE OR DELETE ON JORNADALABORAL
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('JORNADALABORAL', USER, 'INSERT', :NEW.JORNADAID || ',' || :NEW.TIPO || ',' || :NEW.HORAS);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('JORNADALABORAL', USER, 'UPDATE', :NEW.JORNADAID || ',' || :NEW.TIPO || ',' || :NEW.HORAS);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('JORNADALABORAL', USER, 'DELETE', :OLD.JORNADAID || ',' || :OLD.TIPO || ',' || :OLD.HORAS);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_AREA_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_AREA_trg
    AFTER INSERT OR UPDATE OR DELETE ON AREA
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AREA', USER, 'INSERT', :NEW.AREAID || ',' || :NEW.NOMBREAREA || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AREA', USER, 'UPDATE', :NEW.AREAID || ',' || :NEW.NOMBREAREA || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('AREA', USER, 'DELETE', :OLD.AREAID || ',' || :OLD.NOMBREAREA || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_UBICACION_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_UBICACION_trg
    AFTER INSERT OR UPDATE OR DELETE ON UBICACION
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('UBICACION', USER, 'INSERT', :NEW.UBICACIONID || ',' || :NEW.EDIFICIO || ',' || :NEW.PISO || ',' || :NEW.OFICINA);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('UBICACION', USER, 'UPDATE', :NEW.UBICACIONID || ',' || :NEW.EDIFICIO || ',' || :NEW.PISO || ',' || :NEW.OFICINA);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('UBICACION', USER, 'DELETE', :OLD.UBICACIONID || ',' || :OLD.EDIFICIO || ',' || :OLD.PISO || ',' || :OLD.OFICINA);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_TIPODOCUMENTO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_TIPODOCUMENTO_trg
    AFTER INSERT OR UPDATE OR DELETE ON TIPODOCUMENTO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TIPODOCUMENTO', USER, 'INSERT', :NEW.TIPODOCID || ',' || :NEW.NOMBRETIPO);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TIPODOCUMENTO', USER, 'UPDATE', :NEW.TIPODOCID || ',' || :NEW.NOMBRETIPO);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('TIPODOCUMENTO', USER, 'DELETE', :OLD.TIPODOCID || ',' || :OLD.NOMBRETIPO);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_EVALUACIONDESEMPENO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_EVALUACIONDESEMPENO_trg
    AFTER INSERT OR UPDATE OR DELETE ON EVALUACIONDESEMPENO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVALUACIONDESEMPENO', USER, 'INSERT', :NEW.EVALDESEMPENOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.CALIFICACION || ',' || :NEW.COMENTARIOS);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVALUACIONDESEMPENO', USER, 'UPDATE', :NEW.EVALDESEMPENOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.CALIFICACION || ',' || :NEW.COMENTARIOS);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVALUACIONDESEMPENO', USER, 'DELETE', :OLD.EVALDESEMPENOID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHA || ',' || :OLD.CALIFICACION || ',' || :OLD.COMENTARIOS);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_HISTORIALLABORAL_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_HISTORIALLABORAL_trg
    AFTER INSERT OR UPDATE OR DELETE ON HISTORIALLABORAL
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('HISTORIALLABORAL', USER, 'INSERT', :NEW.HISTORIALID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.CARGOID || ',' || :NEW.DEPARTAMENTOID || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('HISTORIALLABORAL', USER, 'UPDATE', :NEW.HISTORIALID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.CARGOID || ',' || :NEW.DEPARTAMENTOID || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('HISTORIALLABORAL', USER, 'DELETE', :OLD.HISTORIALID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN || ',' || :OLD.CARGOID || ',' || :OLD.DEPARTAMENTOID || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_RECLUTAMIENTO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_RECLUTAMIENTO_trg
    AFTER INSERT OR UPDATE OR DELETE ON RECLUTAMIENTO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RECLUTAMIENTO', USER, 'INSERT', :NEW.RECLUTAMIENTOID || ',' || :NEW.CARGOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.ESTADO || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RECLUTAMIENTO', USER, 'UPDATE', :NEW.RECLUTAMIENTOID || ',' || :NEW.CARGOID || ',' || :NEW.FECHAINICIO || ',' || :NEW.FECHAFIN || ',' || :NEW.ESTADO || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('RECLUTAMIENTO', USER, 'DELETE', :OLD.RECLUTAMIENTOID || ',' || :OLD.CARGOID || ',' || :OLD.FECHAINICIO || ',' || :OLD.FECHAFIN || ',' || :OLD.ESTADO || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    

        BEGIN
            EXECUTE IMMEDIATE 'DROP TRIGGER audit_EVENTOEMPLEADO_trg';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -4080 THEN
                    RAISE;
                END IF;
        END;
        

    CREATE OR REPLACE TRIGGER audit_EVENTOEMPLEADO_trg
    AFTER INSERT OR UPDATE OR DELETE ON EVENTOEMPLEADO
    FOR EACH ROW
    BEGIN
        IF INSERTING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVENTOEMPLEADO', USER, 'INSERT', :NEW.EVENTOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.TIPOEVENTO || ',' || :NEW.DESCRIPCION);
        ELSIF UPDATING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVENTOEMPLEADO', USER, 'UPDATE', :NEW.EVENTOID || ',' || :NEW.EMPLEADOID || ',' || :NEW.FECHA || ',' || :NEW.TIPOEVENTO || ',' || :NEW.DESCRIPCION);
        ELSIF DELETING THEN
            INSERT INTO AUDITORIA (NOMBRE_TABLA, USUARIO_DB, ACCION, DESCRIPCION_CAMBIOS)
            VALUES ('EVENTOEMPLEADO', USER, 'DELETE', :OLD.EVENTOID || ',' || :OLD.EMPLEADOID || ',' || :OLD.FECHA || ',' || :OLD.TIPOEVENTO || ',' || :OLD.DESCRIPCION);
        END IF;
    END;
    
